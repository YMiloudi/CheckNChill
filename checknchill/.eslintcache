[{"C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\index.js":"1","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\App.js":"2","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\weather\\Weather.js":"3","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\dontforget\\Quotes.js":"4","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\movies\\MoviesList.js":"5","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\dontforget\\DontForget.js":"6","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\movies\\Movie.js":"7","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\search\\SearchCity.js":"8"},{"size":234,"mtime":1614186065224,"results":"9","hashOfConfig":"10"},{"size":894,"mtime":1614508306535,"results":"11","hashOfConfig":"10"},{"size":4616,"mtime":1614622832448,"results":"12","hashOfConfig":"10"},{"size":1509,"mtime":1614626577441,"results":"13","hashOfConfig":"10"},{"size":1888,"mtime":1614626713469,"results":"14","hashOfConfig":"10"},{"size":1253,"mtime":1614430536087,"results":"15","hashOfConfig":"10"},{"size":785,"mtime":1614186065210,"results":"16","hashOfConfig":"10"},{"size":2732,"mtime":1614711255742,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1isubp5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\index.js",[],["41","42"],"C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\App.js",["43"],"import React from 'react';\r\nimport Weather from './components/weather/Weather';\r\nimport './App.css';\r\nimport Quotes from './components/dontforget/Quotes';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state={\r\n      classImg: \"\"\r\n    }\r\n  }\r\n\r\n  // Création de la fonction qui va récup la donnée et à laquelle on va assigner une condition pour afficher une img\r\n  getImgByTemp(temp){\r\n    if(temp > 16){\r\n      this.setState({classImg: \"imgHot\"})\r\n    }else{\r\n      this.setState({classImg: \"imgCold\"})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className={this.state.classImg}> {/*Création du state classImg qui définit la div temp*/}\r\n        \r\n        <Weather onDataSearch={(temp)=>this.getImgByTemp(temp)}/> {/*onDataSearchs => Fonction qui va récup la data img*/}\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\weather\\Weather.js",["44"],"\r\nimport React, {useState} from 'react';\r\n\r\n\r\nimport DontForget from '../dontforget/DontForget';\r\nimport SearchCity from '../search/SearchCity';\r\nimport MoviesList from '../movies/MoviesList';\r\n\r\nimport {FaTemperatureHigh} from 'react-icons/fa';\r\nimport {TiWeatherWindyCloudy} from 'react-icons/ti';\r\n\r\nimport Clouds from \"./clouds.png\";\r\n\r\nimport './Weather.css';\r\n\r\nconst Weather = (props) => {\r\n\r\n    const [weather, setWeather] = useState(null); // Création de weather = variable d'étât, qui récupère la data. setWeather va permettre d'apporter\r\n                                                    //des changements à la variable d'état : weather\r\n    \r\n  \r\n   function dateBuilder(d){ //Fonction qui permet de stocker et créer la date \r\n        let months= [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    \r\n\r\n        let day = days[d.getDay()];\r\n        let date= d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return  day + \" \" + date + \" \" + month + \" \" + year; \r\n   }\r\n\r\n    \r\n    function getInfoByCityName(cityValue){\r\n        fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + cityValue + \"&units=metric&APPID=9098e1580bce922eca2949d617a96532\")\r\n        .then((resp)=>resp.json())\r\n        .then((data) => onDataRetrieved(data));  //setWeather ne peut passer qu'une seule fonction. Donc, création d'une nouvelle fonction onDataRetrieved\r\n   }\r\n\r\n   function onDataRetrieved(data){ // Création de fonction, pour passer plusieurs lignes \r\n        setWeather(data);\r\n       props.onDataSearch(data.main.temp) //va récupérer la data de la température (L'évènement est soulevé)\r\n   }\r\n\r\n   //SearchCity va récup le onSearch (valeur de l'input), on lui assigne une valeur. Cette valeur va être utiliser dans une fonction\r\n// qui elle va faire un fetch avec l'API et afficher la data. \r\n        \r\n   \r\n    return(\r\n            <main> \r\n                <SearchCity onSearch= {(cityValue) => getInfoByCityName(cityValue)}/> \r\n                \r\n                {\r\n                    weather != null &&\r\n                    <div id=\"boxes\">\r\n                        <div id=\"meteoBox\">\r\n                            <div className=\"location-box\">\r\n                                <div className=\"location\">\r\n                                    \r\n                                    <div className=\"date\">\r\n                                        <h2>{dateBuilder(new Date())}</h2>\r\n                                    </div> \r\n                                    \r\n                                    <h1>What's the weather like in <br />{weather.name}, {weather.sys.country} ?</h1>\r\n     \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"weather-box\">\r\n                                                                \r\n                                    <div id=\"tempData\">\r\n                                        <div className=\"temp\">\r\n                                            <FaTemperatureHigh className=\"icons\" />\r\n                                            <p className=\"weatherText\"> {Math.round(weather.main.temp)}°C </p> \r\n                                        </div>\r\n                                    \r\n                                        <div className=\"weather\">\r\n                                            <TiWeatherWindyCloudy className=\"icons\" />\r\n                                            <p className=\"weatherText\"> {weather.weather[0].main} </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <img id=\"weatherIllu\" src={Clouds} />\r\n                                    \r\n                                    \r\n                                </div>\r\n                        </div>\r\n                        \r\n                        <DontForget \r\n                            title={weather.main.temp}/>\r\n\r\n                        <div id=\"Movies\">\r\n                            \r\n                            <MoviesList/>\r\n\r\n                            <p>Copiright WCS Juan, Clara, Yousra et Nathalie...</p>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    \r\n                    \r\n                }\r\n                \r\n            </main>   \r\n        );\r\n        \r\n                }           \r\nexport default Weather; \r\n\r\n","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\dontforget\\Quotes.js",[],"C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\movies\\MoviesList.js",[],"C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\dontforget\\DontForget.js",["45","46","47","48","49"],"import React from 'react';\r\nimport './DontForget.css';\r\nimport ClassCold from \"./classcold.png\";\r\nimport ClassHot from \"./classhot.png\";\r\n\r\nimport Quotes from \"./Quotes\";\r\n\r\nfunction DontForget(props){\r\n\r\n    function getImage(){\r\n        if(props.title >18){\r\n            return <img src={ClassHot} className=\"vetement\"/>;\r\n        }else{\r\n            return <img src={ClassCold} className=\"vetement\"/>;\r\n        }\r\n    }\r\n\r\n    function getGif(){\r\n        if(props.title >16){\r\n            return <img src=\"https://media.giphy.com/media/bcJvDLgxVSPulkDYB4/giphy.gif\" className=\"gif\"/>\r\n        }else{\r\n            return <img src=\"https://media.giphy.com/media/Fod1Ofcq3dEys/giphy.gif\" className=\"gif\"/>;\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"boxDontFrget\">\r\n            <h1 id=\"dontforgtTitle\">So don't forget...</h1>\r\n            {/* \r\n            <div id=\"getgif\">\r\n                {\r\n                    getGif()\r\n                }\r\n            </div>\r\n            */} \r\n            <div id=\"getimage\">\r\n                {\r\n                    getImage()\r\n                }\r\n            </div>\r\n\r\n            <div id=\"quotes\">\r\n                <Quotes />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DontForget;\r\n","C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\movies\\Movie.js",["50"],"import React, { Component } from 'react'\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component{\r\n    \r\n    constructor (props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='effect'>\r\n                <div className='transition'>\r\n                    <img src={this.props.movie.poster || 'https://pictures.betaseries.com/films/affiches/original/68126.jpg'} alt={this.props.movie.title} className='imageSlide'/>\r\n                    <div className='overlay'>\r\n                        <p className='text'>\r\n                            <h4 className='titleImage'>{this.props.movie.title}</h4>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;",["51","52"],"C:\\Users\\nathalie.crispin\\Desktop\\PERSO NAT\\WILD CODE SCHOOL\\PROJET 2\\checkNchill3\\checkNchill\\checknchill\\src\\components\\search\\SearchCity.js",["53","54"],"import React, { useState, useEffect} from \"react\";\r\n\r\nimport \"./SearchCity.css\";\r\n\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../../Logo.json';\r\n\r\nimport { MdPlace } from 'react-icons/md';\r\n\r\nimport GoogleFontLoader from 'react-google-font-loader';\r\n\r\nconst SearchCity = (props) => {\r\n\r\n    const [searchValue, setSearchValue]=useState(\"\");\r\n\r\n    const [isPaused, setIsPaused]=useState(false);\r\n\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n      };\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setIsPaused(true)\r\n        }, 2700) \r\n    })\r\n\r\n    function searchBtnHanbleClick () {\r\n        props.onSearch(searchValue)\r\n    }\r\n\r\n    function hoverChange (isPaused) {\r\n        if(isPaused= true){\r\n            setIsPaused(false)\r\n        }\r\n        else{\r\n            setIsPaused(true)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"nav\">\r\n            <div id=\"logo\">\r\n                \r\n\r\n                <Lottie\r\n                    id=\"animation\" \r\n                    options={defaultOptions}\r\n                    height={300}\r\n                    width={400}\r\n                    isPaused={isPaused}\r\n                    /*onMouseEnter={hoverChange(isPaused)}\r\n                    onMouseLeave={hoverChange(isPaused)}*/\r\n\r\n                    /*onMouseEnter={setIsPaused(true)}\r\n                    onMouseLeave={setIsPaused(false)}*/\r\n                    />\r\n                \r\n                <p id=\"logoText\">\r\n                    <GoogleFontLoader\r\n                        fonts={[\r\n                        {\r\n                            font: 'Fredoka One',\r\n                            weights: [400, '400i'],\r\n                        }]} />\r\n                    \r\n                    Check'n Chill</p>\r\n\r\n            </div>\r\n\r\n            <div id=\"searchBar\"> \r\n                <input \r\n                    onChange={(event)=>setSearchValue(event.target.value)} \r\n                    type=\"text\" \r\n                    placeholder=\"Chose your city\" \r\n                    value={searchValue} />\r\n                <button \r\n                    id=\"searchBtn\" \r\n                    onClick={()=>searchBtnHanbleClick()}><MdPlace /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCity;\r\n\r\n// A prévoir en plus : une page / un résultat pour une recherche sans résultats\r\n\r\n// l'animation se remet en mouvement au mouse hover\r\n\r\n// Page / cart avant recherche\r\n\r\n// Carrousel\r\n\r\n// get another quote aligné sur quote from\r\n\r\n// titre sur le cart movies : ... Or stay cosy and Chill on TV\r\n\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":84,"column":37,"nodeType":"65","endLine":84,"endColumn":74},{"ruleId":"63","severity":1,"message":"64","line":12,"column":20,"nodeType":"65","endLine":12,"endColumn":62},{"ruleId":"63","severity":1,"message":"64","line":14,"column":20,"nodeType":"65","endLine":14,"endColumn":63},{"ruleId":"59","severity":1,"message":"66","line":18,"column":14,"nodeType":"61","messageId":"62","endLine":18,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":20,"column":20,"nodeType":"65","endLine":20,"endColumn":107},{"ruleId":"63","severity":1,"message":"64","line":22,"column":20,"nodeType":"65","endLine":22,"endColumn":102},{"ruleId":"67","severity":1,"message":"68","line":6,"column":5,"nodeType":"69","messageId":"70","endLine":8,"endColumn":6},{"ruleId":"55","replacedBy":"71"},{"ruleId":"57","replacedBy":"72"},{"ruleId":"59","severity":1,"message":"73","line":37,"column":14,"nodeType":"61","messageId":"62","endLine":37,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":38,"column":12,"nodeType":"76","messageId":"77","endLine":38,"endColumn":26},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Quotes' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getGif' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["78"],["79"],"'hoverChange' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-global-assign","no-unsafe-negation"]