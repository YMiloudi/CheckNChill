[{"/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/index.js":"1","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/App.js":"2","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/Home/Home.js":"3","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/dontforget/Quotes.js":"4","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/Map/Map.js":"5","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/weather/Weather.js":"6","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/movies/MoviesList.js":"7","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/search/SearchCity.js":"8","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/movies/Movie.js":"9","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/dontforget/DontForget.js":"10"},{"size":222,"mtime":1615484770940,"results":"11","hashOfConfig":"12"},{"size":236,"mtime":1615484770934,"results":"13","hashOfConfig":"12"},{"size":3251,"mtime":1615485303326,"results":"14","hashOfConfig":"12"},{"size":897,"mtime":1615484770937,"results":"15","hashOfConfig":"12"},{"size":1618,"mtime":1615489435334,"results":"16","hashOfConfig":"12"},{"size":5003,"mtime":1615484770940,"results":"17","hashOfConfig":"12"},{"size":1756,"mtime":1615484770939,"results":"18","hashOfConfig":"12"},{"size":1464,"mtime":1615484770939,"results":"19","hashOfConfig":"12"},{"size":760,"mtime":1615484770939,"results":"20","hashOfConfig":"12"},{"size":1076,"mtime":1615484770937,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"sm2rrc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/index.js",[],["48","49"],"/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/App.js",[],"/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/Home/Home.js",["50","51","52","53","54","55"],"import React, { useState } from \"react\";\nimport Weather from \"../weather/Weather\";\nimport Quotes from '../dontforget/Quotes';\nimport MoviesList from '../movies/MoviesList';\nimport Maps from '../Map/Map';\n\nimport Check from '../../assets/Check.png'\nimport Chill from '../../assets/Chill.png'\n\nimport '../Home/Home.css'\nimport SearchCity from \"../search/SearchCity\";\n\nconst Home = () => {\n    \n    const [isSearched, setIsSearched] = useState(false);\n    const [searchValue, setSearchValue] = useState(\"\");\n    \n    function isClicked(searchValue){\n        setIsSearched(true);\n        setSearchValue(searchValue)\n    }\n    return(\n        <div>\n            <SearchCity onSearch={(searchValue) => isClicked(searchValue)}/> \n            <Maps/>\n            {\n                isSearched == true &&\n                <Weather cityValue = {searchValue}/> \n            }\n\n            {\n                isSearched == false &&\n                <div className=\"ContainerAboutTop\">\n                    <img id=\"imageAbout\" src={Check}/>\n                    <div id=\"textAbout\">\n                        <h3 id=\"titleAbout\">\n                            Why CheckNChill ? \n                        </h3>\n                        <p id=\"textAbout\">\n                        <p>Changing your plans due to the weather can be very frustrating! \n                        <br>\n                        </br>\n                        Imagine yourself. It’s been 2 months since you planned to go to the sea with your friends and at the last minute, \n                        <br></br>everything is cancelled because of the weather! \n                        It’s so frustrating, right? <br>\n                        </br>That’s why we created this app, just for you!</p>\n                        </p>\n                    </div>\n\n                    <div className=\"ContainerAboutBottom\">\n                        <div id=\"testAbout\">\n                            <h3 id=\"titleAbout\">\n                            Just check it... and chill ! \n                            </h3>\n                            <p id=\"textAbout\">\n                            <p>\n                            The application CheckNChill was created by an observation. \n                            <br></br> \n                            It is very complicated to organize an activity because of the weather that can sometimes be changing. <br>\n                            </br>CheckNchill announces the weather first, but on top of that it reminds you of the essentials to take with you.\n                            <br></br>\n                            You can also enjoy a daily quote that will inspire your day! \n                            <br></br>\n                            On sunny days the app offers you ideas for outdoor activities, such as the nicest bars in your area ! And when it rains, the app proposes you to watch nice movies at home!\n                            <br></br>\n                            CheckNChill is THE app that you need ! \n                            </p></p>\n                        </div>\n                        <img id=\"imageAbout\" src={Chill}/>\n                    </div>\n                </div>\n            }\n           \n\n\n        </div>\n    )\n}\n\nexport default Home;","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/dontforget/Quotes.js",[],"/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/Map/Map.js",["56"],"/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/weather/Weather.js",["57","58"],"\nimport React, {useState, useEffect} from 'react';\n\n\nimport DontForget from '../dontforget/DontForget';\nimport SearchCity from '../search/SearchCity';\n\nimport {FaTemperatureHigh} from 'react-icons/fa';\n\nimport Lottie from 'react-lottie';\nimport animationData from '../../clouds.json'; \nimport animationDataSunny from '../../sunny.json'; \n\nimport './Weather.css';\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\n  const defaultOptionsSunny = {\n    loop: true,\n    autoplay: true,\n    animationData: animationDataSunny,\n    rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\nconst Weather = (props) => {\n\n    const [weather, setWeather] = useState(null); // Création de weather = variable d'étât, qui récupère la data. setWeather va permettre d'apporter\n                                                    //des changements à la variable d'état : weather\n    \n  \n   function dateBuilder(d){ //Fonction qui permet de stocker et créer la date \n        let months= [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    \n\n        let day = days[d.getDay()];\n        let date= d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return  day + \" \" + date + \" \" + month + \" \" + year; \n   }\n\n    \n    useEffect(() => {\n        fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + props.cityValue + \"&units=metric&APPID=9098e1580bce922eca2949d617a96532\")\n        .then((resp)=>resp.json())\n        .then((data) => onDataRetrieved(data));  //setWeather ne peut passer qu'une seule fonction. Donc, création d'une nouvelle fonction onDataRetrieved\n      }, [])\n\n   function onDataRetrieved(data){ // Création de fonction, pour passer plusieurs lignes \n        setWeather(data);\n   }\n\n   //SearchCity va récup le onSearch (valeur de l'input), on lui assigne une valeur. Cette valeur va être utiliser dans une fonction\n// qui elle va faire un fetch avec l'API et afficher la data. \n        \n    function getLottie(){\n        if(weather.main.temp >= 15){\n            return <Lottie \n            options={defaultOptionsSunny}\n            height={300}\n            width={300}\n            />\n            }else{\n            return <Lottie \n            options={defaultOptions}\n            height={300}\n            width={300}\n            />\n                }\n            }\n    \n\n    return(\n            <main> \n                \n                {\n                    weather != null &&\n                    <>\n                        <div id=\"meteoBox\">\n                            <div className=\"location-box\">\n                                <div className=\"location\">\n                                    \n                                    <div className=\"date\">\n                                        <h2>{dateBuilder(new Date())}</h2>\n                                    </div> \n                                    \n                                    <h1>What's the weather like in <br />{weather.name}, {weather.sys.country} ?</h1>\n     \n                                </div>\n                            </div>\n                            \n                            <div id=\"weatherContent\">\n                                <div className=\"weather-box\">\n                                                                \n                                    <div id=\"tempData\">\n                                        <div className=\"temp\">\n                                            <FaTemperatureHigh className=\"icons\" />\n                                            <p className=\"weatherText\"> {Math.round(weather.main.temp)}°C </p> \n                                        </div>\n                                    \n                                        <div className=\"weather\">\n                                            <p className=\"weatherText\"> {weather.weather[0].main} </p>\n                                            <div>\n                                                {getLottie()}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    \n                                </div>\n                                \n                            </div>\n                        </div>\n                        \n                        <DontForget \n                            title={weather.main.temp}/>\n                            \n                        \n                    </>\n                    \n                    \n                }\n                \n            </main>   \n        );\n        \n                }           \nexport default Weather; \n\n","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/movies/MoviesList.js",[],"/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/search/SearchCity.js",["59"],"import \"./SearchCity.css\";\nimport React, { useState, useEffect} from \"react\";\nimport Lottie from 'react-lottie';\nimport animationData from '../../Logo.json';\nimport { MdPlace } from 'react-icons/md';\n\nconst SearchCity = (props) => {\n\n    const [searchValue, setSearchValue]=useState(\"\");\n\n    const [isStopped, setIsStopped]=useState(false);\n\n    const [isPaused, setIsPaused]=useState(false);\n\n    const defaultOptions = {\n        loop: false,\n        autoplay: true, \n        animationData: animationData,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n      };\n\n    useEffect(()=>{\n        setTimeout(()=>{\n            setIsPaused(true)\n        }, 2700) \n    })\n\n    function searchBtnHandleClick () {\n        props.onSearch(searchValue)\n    }\n\n    return(\n        <div id=\"nav\">\n            <Lottie\n                id=\"animation\" \n                options={defaultOptions}\n                height={300}\n                width={400}\n                isStopped={isStopped}\n                isPaused={isPaused}/>\n\n            <div id=\"searchBar\"> \n                <input \n                    onChange={(event)=>setSearchValue(event.target.value)} \n                    type=\"text\" \n                    placeholder=\"Choose your city\" \n                    value={searchValue} />\n                <button onClick={()=>searchBtnHandleClick()}><MdPlace /></button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchCity;\n\n","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/movies/Movie.js",["60"],"import React, { Component } from 'react'\nimport './Movie.css';\n\nclass Movie extends Component{\n    \n    constructor (props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <div className='effect'>\n                <div className='transition'>\n                    <img src={this.props.movie.poster || 'https://pictures.betaseries.com/films/affiches/original/68126.jpg'} alt={this.props.movie.title} className='imageSlide'/>\n                    <div className='overlay'>\n                        <p className='text'>\n                            <h4 className='titleImage'>{this.props.movie.title}</h4>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Movie;","/Users/juanpedroortega/Desktop/aaaaa/checkNchill/checknchill/src/components/dontforget/DontForget.js",["61","62","63","64","65"],"import React from 'react';\nimport './DontForget.css';\nimport ClassCold from \"./classcold.png\";\nimport ClassHot from \"./classhot.png\";\n\nfunction DontForget(props){\n\n    function getImage(){\n        if(props.title >18){\n            return <img src={ClassHot} className=\"vetement\"/>;\n        }else{\n            return <img src={ClassCold} className=\"vetement\"/>;\n        }\n    }\n\n    function getGif(){\n        if(props.title >16){\n            return <img src=\"https://media.giphy.com/media/bcJvDLgxVSPulkDYB4/giphy.gif\" className=\"gif\"/>\n        }else{\n            return <img src=\"https://media.giphy.com/media/Fod1Ofcq3dEys/giphy.gif\" className=\"gif\"/>;\n        }\n    }\n    return(\n        <div className=\"dontFrget\">\n            <h1>so don't forget...</h1>\n            {/* \n            <div id=\"getgif\">\n                {\n                    getGif()\n                }\n            </div>\n            */} \n            <div id=\"getimage\">\n                {\n                    getImage()\n                }\n            </div>\n\n\n        </div>\n    )\n}\nexport default DontForget;\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":27,"column":28,"nodeType":"77","messageId":"78","endLine":27,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":32,"column":28,"nodeType":"77","messageId":"78","endLine":32,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":34,"column":21,"nodeType":"81","endLine":34,"endColumn":55},{"ruleId":"79","severity":1,"message":"80","line":69,"column":25,"nodeType":"81","endLine":69,"endColumn":59},{"ruleId":"70","severity":1,"message":"82","line":14,"column":10,"nodeType":"72","messageId":"73","endLine":14,"endColumn":19},{"ruleId":"70","severity":1,"message":"83","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":58,"column":10,"nodeType":"86","endLine":58,"endColumn":12,"suggestions":"87"},{"ruleId":"70","severity":1,"message":"88","line":11,"column":23,"nodeType":"72","messageId":"73","endLine":11,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":6,"column":5,"nodeType":"91","messageId":"92","endLine":8,"endColumn":6},{"ruleId":"79","severity":1,"message":"80","line":10,"column":20,"nodeType":"81","endLine":10,"endColumn":62},{"ruleId":"79","severity":1,"message":"80","line":12,"column":20,"nodeType":"81","endLine":12,"endColumn":63},{"ruleId":"70","severity":1,"message":"93","line":16,"column":14,"nodeType":"72","messageId":"73","endLine":16,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":18,"column":20,"nodeType":"81","endLine":18,"endColumn":107},{"ruleId":"79","severity":1,"message":"80","line":20,"column":20,"nodeType":"81","endLine":20,"endColumn":102},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Quotes' is defined but never used.","Identifier","unusedVar","'MoviesList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'direction' is assigned a value but never used.","'SearchCity' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.cityValue'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'setIsStopped' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'getGif' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [props.cityValue]",{"range":"99","text":"100"},[1920,1922],"[props.cityValue]"]