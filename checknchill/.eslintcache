[{"C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\index.js":"1","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\App.js":"2","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\Home\\Home.js":"3","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\dontforget\\Quotes.js":"4","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\search\\SearchCity.js":"5","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\movies\\MoviesList.js":"6","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\weather\\Weather.js":"7","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\Map\\Map.js":"8","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\movies\\Movie.js":"9","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\dontforget\\DontForget.js":"10","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\Footer.js":"11"},{"size":234,"mtime":1611661545933,"results":"12","hashOfConfig":"13"},{"size":258,"mtime":1615492657098,"results":"14","hashOfConfig":"13"},{"size":4305,"mtime":1615565084640,"results":"15","hashOfConfig":"13"},{"size":935,"mtime":1614783661261,"results":"16","hashOfConfig":"13"},{"size":1521,"mtime":1615492657109,"results":"17","hashOfConfig":"13"},{"size":1826,"mtime":1615492657109,"results":"18","hashOfConfig":"13"},{"size":5205,"mtime":1615492657111,"results":"19","hashOfConfig":"13"},{"size":1675,"mtime":1615492657106,"results":"20","hashOfConfig":"13"},{"size":785,"mtime":1615487033222,"results":"21","hashOfConfig":"13"},{"size":1119,"mtime":1615492657107,"results":"22","hashOfConfig":"13"},{"size":235,"mtime":1615542637839,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10fboir",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\index.js",[],["52","53"],"C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\App.js",[],"C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\Home\\Home.js",["54","55","56","57"],"C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\dontforget\\Quotes.js",[],"C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\search\\SearchCity.js",["58"],"import \"./SearchCity.css\";\r\nimport React, { useState, useEffect} from \"react\";\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../../Logo.json';\r\nimport { MdPlace } from 'react-icons/md';\r\n\r\nconst SearchCity = (props) => {\r\n\r\n    const [searchValue, setSearchValue]=useState(\"\");\r\n\r\n    const [isStopped, setIsStopped]=useState(false);\r\n\r\n    const [isPaused, setIsPaused]=useState(false);\r\n\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n      };\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setIsPaused(true)\r\n        }, 2700) \r\n    })\r\n\r\n    function searchBtnHandleClick () {\r\n        props.onSearch(searchValue)\r\n    }\r\n\r\n    return(\r\n        <div id=\"nav\">\r\n            <Lottie\r\n                id=\"animation\" \r\n                options={defaultOptions}\r\n                height={300}\r\n                width={400}\r\n                isStopped={isStopped}\r\n                isPaused={isPaused}/>\r\n\r\n            <div id=\"searchBar\"> \r\n                <input \r\n                    onChange={(event)=>setSearchValue(event.target.value)} \r\n                    type=\"text\" \r\n                    placeholder=\"Choose your city\" \r\n                    value={searchValue} />\r\n                <button onClick={()=>searchBtnHandleClick()}><MdPlace /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCity;\r\n\r\n","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\movies\\MoviesList.js",[],"C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\weather\\Weather.js",["59","60","61","62","63"],"import React, {useState, useEffect} from 'react';\r\n\r\n\r\nimport DontForget from '../dontforget/DontForget';\r\nimport SearchCity from '../search/SearchCity';\r\n\r\nimport {FaTemperatureHigh} from 'react-icons/fa';\r\n\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../../clouds.json'; \r\nimport animationDataSunny from '../../sunny.json'; \r\n\r\nimport './Weather.css';\r\n\r\nconst defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n  };\r\n\r\n  const defaultOptionsSunny = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationDataSunny,\r\n    rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n  };\r\n\r\nconst Weather = (props) => {\r\n\r\n    const [weather, setWeather] = useState(null); // Création de weather = variable d'étât, qui récupère la data. setWeather va permettre d'apporter\r\n                                                    //des changements à la variable d'état : weather\r\n    \r\n  \r\n   function dateBuilder(d){ //Fonction qui permet de stocker et créer la date \r\n        let months= [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    \r\n\r\n        let day = days[d.getDay()];\r\n        let date= d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return  day + \" \" + date + \" \" + month + \" \" + year; \r\n   }\r\n\r\n    \r\n    useEffect(() => {\r\n        fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + props.cityValue + \"&units=metric&APPID=9098e1580bce922eca2949d617a96532\")\r\n        .then((resp)=>resp.json())\r\n        .then((data) => onDataRetrieved(data));  //setWeather ne peut passer qu'une seule fonction. Donc, création d'une nouvelle fonction onDataRetrieved\r\n      }, [])\r\n\r\n   function onDataRetrieved(data){ // Création de fonction, pour passer plusieurs lignes\r\n       //console.log(data)\r\n       //console.log(\"test\", weather != null && weather.cod != \"404\")  \r\n        setWeather(data);\r\n   }\r\n\r\n   //SearchCity va récup le onSearch (valeur de l'input), on lui assigne une valeur. Cette valeur va être utiliser dans une fonction\r\n// qui elle va faire un fetch avec l'API et afficher la data. \r\n        \r\n    function getLottie(){\r\n        if(weather.main.temp >= 15){\r\n            return <Lottie \r\n            options={defaultOptionsSunny}\r\n            height={300}\r\n            width={300}\r\n            />\r\n            }else{\r\n            return <Lottie \r\n            options={defaultOptions}\r\n            height={300}\r\n            width={300}\r\n            />\r\n                }\r\n            }\r\n    \r\n\r\n    return(\r\n            <main> \r\n                \r\n                {\r\n                    weather != null && weather.cod != \"404\" && (\r\n                        <>\r\n                        <div id=\"meteoBox\">\r\n                            <div className=\"location-box\">\r\n                                <div className=\"location\">\r\n                                    \r\n                                    <div className=\"date\">\r\n                                        <h2>{dateBuilder(new Date())}</h2>\r\n                                    </div> \r\n                                    \r\n                                    <h1>What's the weather like in <br />{weather.name}, {weather.sys.country} ?</h1>\r\n     \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div id=\"weatherContent\">\r\n                                <div className=\"weather-box\">\r\n                                                                \r\n                                    <div id=\"tempData\">\r\n                                        <div className=\"temp\">\r\n                                            <FaTemperatureHigh className=\"icons\" />\r\n                                            <p className=\"weatherText\"> {Math.round(weather.main.temp)}°C </p> \r\n                                        </div>\r\n                                    \r\n                                        <div className=\"weather\">\r\n                                            <p className=\"weatherText\"> {weather.weather[0].main} </p>\r\n                                            <div>\r\n                                                {getLottie()}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <DontForget \r\n                            title={weather.main.temp}/>\r\n                    </>\r\n                    ) || (\r\n                        <p className=\"weatherP\">Humm .. there seems to be an error in the name of the city</p>\r\n                    )   \r\n                }\r\n            </main>   \r\n        );\r\n        \r\n                }           \r\nexport default Weather; ","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\Map\\Map.js",["64"],"/* global google */\r\nimport React, { useState } from \"react\";\r\nimport './Map.css';\r\nimport {\r\n  GoogleMap,\r\n  withScriptjs,\r\n  withGoogleMap\r\n} from \"react-google-maps\";\r\n\r\n//This is our map component\r\nfunction Map() {\r\n  const DirectionService = new window.google.maps.DirectionsService();\r\n\r\n  const [direction, setDirection] = useState();\r\n\r\n  DirectionService.route(\r\n    {\r\n      origin: new google.maps.LatLng(48.85837, 2.294481),\r\n      destination: new google.maps.LatLng(48.85668, 2.3995703),\r\n      travelMode: google.maps.TravelMode.DRIVING\r\n    },\r\n    (result, status) => {\r\n      if (status === google.maps.DirectionsStatus.OK) {\r\n        setDirection(result);\r\n      } else {\r\n        console.error(`error fetching directions ${result}`);\r\n      }\r\n    }\r\n  );\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={12}\r\n      defaultCenter={{ lat: 48.856613, lng: 2.352222 }}\r\n    > \r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\n//We need to wrap our map component here so it can load all the needed libraries\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\nexport default function Maps() {\r\n  return (\r\n    <div className=\"map\">\r\n  \r\n      <div className=\"mapStyle\">\r\n          \r\n        <WrappedMap\r\n        /*Here the API Key \"AIzaSyDe7b2AlZGDtxggir5M9knmgSfgIVV_k_k\"*/\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDe7b2AlZGDtxggir5M9knmgSfgIVV_k_k&v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<div style={{ height: \"100%\" }} />}\r\n          containerElement={<div style={{ height: \"100%\" }} />}\r\n          mapElement={<div style={{ height: \"100%\" }} />}>\r\n          </WrappedMap>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\movies\\Movie.js",["65"],"import React, { Component } from 'react'\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component{\r\n    \r\n    constructor (props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='effect'>\r\n                <div className='transition'>\r\n                    <img src={this.props.movie.poster || 'https://pictures.betaseries.com/films/affiches/original/68126.jpg'} alt={this.props.movie.title} className='imageSlide'/>\r\n                    <div className='overlay'>\r\n                        <p className='text'>\r\n                            <h4 className='titleImage'>{this.props.movie.title}</h4>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\dontforget\\DontForget.js",["66","67","68","69","70"],"import React from 'react';\r\nimport './DontForget.css';\r\nimport ClassCold from \"./classcold.png\";\r\nimport ClassHot from \"./classhot.png\";\r\n\r\nfunction DontForget(props){\r\n\r\n    function getImage(){\r\n        if(props.title >18){\r\n            return <img src={ClassHot} className=\"vetement\"/>;\r\n        }else{\r\n            return <img src={ClassCold} className=\"vetement\"/>;\r\n        }\r\n    }\r\n\r\n    function getGif(){\r\n        if(props.title >16){\r\n            return <img src=\"https://media.giphy.com/media/bcJvDLgxVSPulkDYB4/giphy.gif\" className=\"gif\"/>\r\n        }else{\r\n            return <img src=\"https://media.giphy.com/media/Fod1Ofcq3dEys/giphy.gif\" className=\"gif\"/>;\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"dontFrget\">\r\n            <h1>so don't forget...</h1>\r\n            {/* \r\n            <div id=\"getgif\">\r\n                {\r\n                    getGif()\r\n                }\r\n            </div>\r\n            */} \r\n            <div id=\"getimage\">\r\n                {\r\n                    getImage()\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default DontForget;\r\n","C:\\Users\\yousr\\checkNchill\\checkNchill\\src\\components\\Footer.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":34,"column":28,"nodeType":"77","messageId":"78","endLine":34,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":45,"column":28,"nodeType":"77","messageId":"78","endLine":45,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":51,"column":33,"nodeType":"81","endLine":51,"endColumn":67},{"ruleId":"79","severity":1,"message":"80","line":88,"column":33,"nodeType":"81","endLine":88,"endColumn":67},{"ruleId":"82","severity":1,"message":"83","line":11,"column":23,"nodeType":"84","messageId":"85","endLine":11,"endColumn":35},{"ruleId":"82","severity":1,"message":"86","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":57,"column":10,"nodeType":"89","endLine":57,"endColumn":12,"suggestions":"90"},{"ruleId":"75","severity":1,"message":"91","line":89,"column":52,"nodeType":"77","messageId":"78","endLine":89,"endColumn":54},{"ruleId":"92","severity":1,"message":"93","line":89,"column":61,"nodeType":"94","messageId":"95","endLine":89,"endColumn":63},{"ruleId":"92","severity":1,"message":"93","line":127,"column":23,"nodeType":"94","messageId":"95","endLine":127,"endColumn":25},{"ruleId":"82","severity":1,"message":"96","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":6,"column":5,"nodeType":"99","messageId":"100","endLine":8,"endColumn":6},{"ruleId":"79","severity":1,"message":"80","line":10,"column":20,"nodeType":"81","endLine":10,"endColumn":62},{"ruleId":"79","severity":1,"message":"80","line":12,"column":20,"nodeType":"81","endLine":12,"endColumn":63},{"ruleId":"82","severity":1,"message":"101","line":16,"column":14,"nodeType":"84","messageId":"85","endLine":16,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":18,"column":20,"nodeType":"81","endLine":18,"endColumn":107},{"ruleId":"79","severity":1,"message":"80","line":20,"column":20,"nodeType":"81","endLine":20,"endColumn":102},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setIsStopped' is assigned a value but never used.","Identifier","unusedVar","'SearchCity' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.cityValue'. Either include it or remove the dependency array.","ArrayExpression",["104"],"Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'direction' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'getGif' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [props.cityValue]",{"range":"107","text":"108"},[1975,1977],"[props.cityValue]"]